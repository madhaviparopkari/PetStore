// <auto-generated />
using System;
using IO.Swagger.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IO.Swagger.Migrations
{
    [DbContext(typeof(PetstoreDBContext))]
    partial class PetstoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IO.Swagger.DBModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Category__72E12F1BE07B17E6")
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__Customer__AB6E6164078B2432");

                    b.HasIndex("Password")
                        .IsUnique()
                        .HasName("UQ__Customer__6E2DBEDEBDEC29AB");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("UQ__Customer__B43B145FE6986663");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("UQ__Customer__F3DBC5721B62B3FF");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnName("delivery_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnName("invoice_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnName("ship_date")
                        .HasColumnType("datetime");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnName("shipping_address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("StatusId")
                        .HasColumnName("status_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StatusId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Invoice___72E12F1BBC8D8952");

                    b.ToTable("Invoice_Status");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("category_id")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnName("invoice_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.PetTagMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PetId")
                        .HasColumnName("pet_id")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnName("tag_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("TagId");

                    b.ToTable("Pet_Tag_Mapping");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Tag__72E12F1BCA4C4E51")
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Invoice", b =>
                {
                    b.HasOne("IO.Swagger.DBModels.Customer", "Customer")
                        .WithMany("Invoice")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Invoice__custome__5FB337D6")
                        .IsRequired();

                    b.HasOne("IO.Swagger.DBModels.InvoiceStatus", "Status")
                        .WithMany("Invoice")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Invoice__status___5EBF139D")
                        .IsRequired();
                });

            modelBuilder.Entity("IO.Swagger.DBModels.Pet", b =>
                {
                    b.HasOne("IO.Swagger.DBModels.Category", "Category")
                        .WithMany("Pet")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Pet__category_id__5070F446");

                    b.HasOne("IO.Swagger.DBModels.Invoice", "Invoice")
                        .WithMany("Pet")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__Pet__invoice_id__68487DD7");
                });

            modelBuilder.Entity("IO.Swagger.DBModels.PetTagMapping", b =>
                {
                    b.HasOne("IO.Swagger.DBModels.Pet", "Pet")
                        .WithMany("PetTagMapping")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FK__Pet_Tag_M__pet_i__66603565")
                        .IsRequired();

                    b.HasOne("IO.Swagger.DBModels.Tag", "Tag")
                        .WithMany("PetTagMapping")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK__Pet_Tag_M__tag_i__6754599E")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
